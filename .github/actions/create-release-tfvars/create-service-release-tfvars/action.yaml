name: Create Microservice Release tfvars
description: "Creates and uploads the release tfvars for a microservice"
inputs:
  service_name:
    description: "The name of the microservice"
    required: true
  short_commit:
    description: "The short commit for the release branch"
    required: true
  secrets:
    description: "Organization secrets toJSON"
    required: true

runs:
  using: composite
  steps:
    - name: ðŸ”‘ Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ fromJSON(inputs.secrets).AWS_ACCOUNT_ID }}:role/github-actions
        aws-region: ${{ fromJSON(inputs.secrets).DVSA_AWS_REGION }}

    - name: ðŸ¤« Get AWS Secrets
      uses: aws-actions/aws-secretsmanager-get-secrets@v1
      with:
        secret-ids: des-aws/env
        parse-json-secrets: true

    - name: Create Release tfvars
      id: create_tfvars
      shell: bash
      run: |
        file_name=${{ inputs.service_name }}_${{ github.ref_name }}.tfvars
        echo "FILE_NAME=$file_name" >> $GITHUB_ENV
        
        version=$(aws s3 ls ${{ env.DES_AWS_ENV_ARTEFACT_S3 }}/mes/gha/functions/ | 
        grep ${{ inputs.short_commit }} | grep --invert-match coverage | sort -r | cut -d '-' -f 4 | head -n 1)
        
        for function in $(yq eval '.functions | keys' -o=json serverless.yml | jq -r '.[]'); do
          echo "${function}_version = \"${version}-${{ inputs.short_commit }}.zip\"" >> $file_name
        done  

    - name: Upload Release tfvars
      shell: bash
      run: |
        aws s3 cp ${{ env.FILE_NAME }} s3://${{ env.DES_AWS_ENV_ARTEFACT_S3 }}/mes/gha/releases/${{ env.FILE_NAME }}
        echo "## Artefacts:" >> $GITHUB_STEP_SUMMARY
        echo "âœ… Uploaded ${{ env.FILE_NAME }} to S3" >> $GITHUB_STEP_SUMMARY
        
