name: Manage GitHub Branches
description: Create or Delete GitHub Branches

inputs:
  action:
    description: Delete or Create Action
    required: true
  base-branch:
    description: Source Branch for creation
    required: false
  branch-name:
    description: Name of the Branch to perform actions upon
    required: true
  repositories:
    description: Raw single line JSON list containing repositories to perform actions upon
    required: true
  release-type:
    description: Type of Release (full, frontend, backend)
    required: true
  dry-run:
    description: Don't perform action, just output information
    default: 'false'

runs:
  using: composite
  steps:
    - name: Create/Delete Branch
      shell: bash
      run: |
        # Create/Delete Branch
        echo "# ${{ inputs.action }} Branch Summary ${{ inputs.dry-run == 'true' && '(Dry Run)' || '' }}" >> $GITHUB_STEP_SUMMARY
        echo "| Repository | Branch | Status |" >> $GITHUB_STEP_SUMMARY
        echo "| :--- | :--- | :--- |" >> $GITHUB_STEP_SUMMARY
        gh auth setup-git

        manage_branch () {
          local repo=${1}
          local base_branch=${2}
        
          if [[ $(awk '{print length}' <<< $(git ls-remote --heads --tags https://github.com/dvsa/$repo ${{ inputs.branch-name }})) ${{ inputs.action == 'delete' && '==' || '>' }} 0 ]]; then
            echo "| $repo | ${{ inputs.branch-name }} | ☑️ ${{ inputs.action == 'delete' && 'Does not Exist' || 'Already Created' }} |" >> $GITHUB_STEP_SUMMARY

          else
            if [[ "${{ inputs.action }}" == "Create" ]]; then
              commit_id=$(gh api /repos/dvsa/$repo/branches/$base_branch | jq -r '.commit.sha')
        
              ${{ inputs.dry-run == 'true' && 'echo [debug] ' || '' }}gh api -X POST /repos/dvsa/$repo/git/refs -f \
              ref="refs/heads/${{ inputs.branch-name }}" -f sha="${commit_id}" ${{ inputs.dry-run != 'true' && '1>/dev/null' || '' }} \
              && { echo "| $repo | ${{ inputs.branch-name }} | ✅ Created |" >> $GITHUB_STEP_SUMMARY; } \
              || { echo "| $repo | ${{ inputs.branch-name }} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY; }
        
            elif [[ "${{ inputs.action }}" == "Delete" ]]; then
              ${{ inputs.dry-run == 'true' && 'echo [debug] ' || '' }}gh api -X DELETE \
              /repos/dvsa/$repo/git/refs/heads/${{ inputs.branch-name }} ${{ inputs.dry-run != 'true' && '1>/dev/null' || '' }} \
              && { echo "| $repo | ${{ inputs.branch-name }} | ✅ Deleted |" >> $GITHUB_STEP_SUMMARY; } \
              || { echo "| $repo | ${{ inputs.branch-name }} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY; }

            else
              echo "❌ Invalid action requested: `${{ inputs.action }}`" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi       
          fi
          printf "✅ ${{ inputs.action }}d branch ${{ inputs.branch-name }} in $repo \n"
        }

        for release_component in ${{ inputs.release-type }}; do
          release_component_repos=$(jq -rc ".$release_component[]" <<< '${{ inputs.repositories }}')
        
          for repo in $release_component_repos; do
            repo_name=$(jq -r '.repoName' <<< $repo)
            [ "${{ inputs.base-branch }}" == "default" ] && base_branch=$(jq -r '.baseBranch' <<< $repo) || base_branch=${{ inputs.base-branch }}
            
            manage_branch $repo_name $base_branch
          done
          wait
        done
