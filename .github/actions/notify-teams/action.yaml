name: Send Teams Notification
description: 'Send a notification to Teams channel via Webhook.'

inputs:
  webhook_url:
    description: 'The webhook URL to send the notification to.'
    required: true
  information:
    description: 'Extended information.'
    default: ''
  ipa-link:
    description: 'The link to the ipa file.'
    required: false
  qr-link:
    description: 'The link to the ipa QR code.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Microsoft Teams Notification
      shell: bash
      run: |
        STATUS="${{ job.status }}"
        COLOR="good"

        if [[ "$STATUS" == "failure" ]]; then
          COLOR="attention"
        elif [[ "$STATUS" == "cancelled" ]]; then
          COLOR="warning"
        fi

        MESSAGE=$(cat <<EOF
        {
          "type": "message",
          "attachments": [
            {
              "contentType": "application/vnd.microsoft.card.adaptive",
              "content": {
              "\$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                "version": "1.4",
                "type": "AdaptiveCard",
                "body": [
                  {
                    "type": "ColumnSet",
                    "columns": [
                      {
                        "width": "100px",
                        "items": [
                          {
                            "type": "Image",
                            "url": "https://raw.githubusercontent.com/Skitionek/notify-microsoft-teams/master/icons/$STATUS.png",
                            "size": "stretch"
                          }
                        ]
                      },
                      {
                        "width": "stretch",
                        "verticalContentAlignment": "center",
                        "items": [
                          {
                            "type": "TextBlock",
                            "size": "Large",
                            "weight": "Bolder",
                            "text": "${GITHUB_WORKFLOW}"
                          },
                          {
                            "type": "TextBlock",
                            "size": "Large",
                            "weight": "Bolder",
                            "text": "Env & Version: ${{ inputs.information }}"
                          },
                          {
                            "type": "TextBlock",
                            "text": "**Repository:** ${GITHUB_REPOSITORY}"
                          },
                          {
                            "type": "TextBlock",
                            "text": "**Branch:** ${GITHUB_REF_NAME}"
                          },
                          {
                            "type": "TextBlock",
                            "text": "**Who:** ${GITHUB_ACTOR}"
                          },
                          {
                            "type": "TextBlock",
                            "text": "**Status:** ${STATUS}",
                            "color": "${COLOR}"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "ColumnSet",
                    "columns": [
                      {
                        "width": "100px",
                        "items": [
                          {
                            "type": "Image",
                            "url": "${{ inputs.qr-link }}",
                            "size": "stretch"
                          }
                        ]
                      },
                      {
                        "width": "stretch",
                        "items": [
                          {
                            "type": "ActionSet",
                            "actions": [
                              {
                                "type": "Action.OpenUrl",
                                "title": "View Workflow",
                                "url": "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
                              }
                            ]
                          },
                          {
                            "type": "ActionSet",
                            "actions": [
                              {
                                "type": "Action.OpenUrl",
                                "title": "Get .ipa file",
                                "url": "${{inputs.ipa-link}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
        EOF
        )

        curl -H "Content-Type: application/json" -d "$MESSAGE" "${{ inputs.webhook_url }}"