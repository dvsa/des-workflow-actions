name: üèÉ Run Database Scripts
description: "Action to run scripts for a MySQL database from a specific repository"
inputs:
  db-script-repo:
    description: The repository to run the DB scripts from
    required: true
  db-script-branch:
    description: The branch to run the DB scripts from
    required: true
  db-script-ssh-key:
    description: The SSH key to access a private DB scripts repository
    required: false
  db-script-path:
    description: The path to the DB scripts
    required: true
  db-cname:
    description: The Route 53 CNAME for the DB
    required: true
  db-username:
    description: The DB username ro tun the scripts against
    required: true
  db-password:
    description: The DB password for the user
    required: true
  user-password:
    description: The user password to be injected into the scripts (optional)
    required: false
  db-script-filename:
    description: The filename of the DB script to run when a script needs user-password injected (optional)
    required: false

runs:
  using: composite
  steps:
    - name: üì® Checkout DB Script Repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.db-script-repo }}
        ref: ${{ inputs.db-script-branch }}
        ssh-key: ${{ inputs.db-script-ssh-key || '' }}

    - name: üèÉ Run Database Scripts
      shell: bash
      run: |
        set +x
        cd ${{ inputs.db-script-path }}
        
        if [ -n "${{ inputs.user-password }}" ]; then
          source_script=$(<"${{ inputs.db-script-filename }}")
          user_password="${{ inputs.user-password }}"
          script_file="$(echo $source_script | sed "s/<USER_PASSWORD>/${user_password//&/\\&}/")"

          mysql -h ${{ inputs.db-cname }} -u ${{ inputs.db-username }} -p${{ inputs.db-password }} -Bse \"source ${script_file}\"
        
        else                   
          for script_file in *; do        
            mysql -h ${{ inputs.db-cname }} -u ${{ inputs.db-username }} -p${{ inputs.db-password }} -Bse \"source ${script_file}\"
          done 
        fi
        
        set -x
