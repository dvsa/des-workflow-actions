name: üöÄ Terraform Deploy
on:
  workflow_call:
    inputs:
      branch:
        description: The Terraform branch to deploy
        type: string
        required: true
      aws-account:
        description: The AWS account to deploy to
        type: string
        required: true
      tf-environment:
        description: The Terraform environment to deploy to
        type: string
        required: true
      api:
        description: Whether to deploy the API component when deploying to dev (default is true for other environments)
        type: boolean
        default: true
        required: false
      drs:
        description: Whether to deploy the DRS component when deploying to dev (default is true for other environments)
        type: boolean
        default: true
        required: false
      dms:
        description: Whether to deploy the DMS component when deploying to dev (default is true for other environments)
        type: boolean
        default: true
        required: false
      release-tag:
        description: The version of the microservices to be deployed
        type: string
        required: false
      drs-early-run:
        description: Whether to deploy the DRS component before the API component (required when changes are made to the ref-data VPC endpoint service)
        type: boolean
        default: false
        required: false
      tf-args:
        description: Additional Terraform arguments
        type: string
        required: false
      full-dms-deploy:
        description: Whether to run a full static load when there are changes to the static task
        type: boolean
        required: true
      tars-replica-db-script-branch:
        description: The branch to run the DB scripts from
        type: string
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  start-ec2-runner:
    name: ‚ñ∂Ô∏è Start EC2 Runner
    uses: dvsa/des-workflow-actions/.github/workflows/manage-gha-tf-runner.yaml@main
    with:
      action: start
      aws-account: ${{ inputs.aws-account }}
    secrets: inherit

  deploy-dmsbase:
    name: üß© DMSBASE
    needs: start-ec2-runner
    if: always() && !failure() && !cancelled() && inputs.tf-environment != 'dev'
    strategy:
      max-parallel: 1
      matrix:
        tf-action: [plan, apply]
    uses: dvsa/des-workflow-actions/.github/workflows/terraform-action.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      branch: ${{ inputs.branch }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      tf-component: dmsbase
      tf-action: ${{ matrix.tf-action }}
    secrets: inherit

  deploy-drs-early-run:
    name: üß© DRS (Early Run)
    needs: [start-ec2-runner, deploy-dmsbase]
    if: always() && !failure() && !cancelled() && inputs.drs-early-run == true
    strategy:
      max-parallel: 1
      matrix:
        tf-action: [plan, apply]
    uses: dvsa/des-workflow-actions/.github/workflows/terraform-action.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      branch: ${{ inputs.branch }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      tf-component: drs
      release-tag: ${{ inputs.release-tag }}
      tf-action: ${{ matrix.tf-action }}
      artifact-name-prefix: ${{ inputs.drs-early-run == true && '0' || '' }}
    secrets: inherit

  deploy-api:
    name: üß© API
    needs: [start-ec2-runner, deploy-drs-early-run]
    if: always() && !failure() && !cancelled() && inputs.api == true
    strategy:
      max-parallel: 1
      matrix:
        tf-action: [plan, apply]
    uses: dvsa/des-workflow-actions/.github/workflows/terraform-action.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      branch: ${{ inputs.branch }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      tf-component: api
      release-tag: ${{ inputs.release-tag }}
      tf-args: ${{ inputs.tf-args }}
      tf-action: ${{ matrix.tf-action }}
    secrets: inherit

  deploy-drs:
    name: üß© DRS
    needs: [start-ec2-runner, deploy-api]
    if: always() && !failure() && !cancelled() && inputs.drs == true
    strategy:
      max-parallel: 1
      matrix:
        tf-action: [plan, apply]
    uses: dvsa/des-workflow-actions/.github/workflows/terraform-action.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      branch: ${{ inputs.branch }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      tf-component: drs
      release-tag: ${{ inputs.release-tag }}
      tf-args: ${{ inputs.tf-args }}
      tf-action: ${{ matrix.tf-action }}
      artifact-name-prefix: ${{ inputs.drs-early-run == true && '1' || '' }}
    secrets: inherit

  create-db-users:
    name: ‚ú® Create DB Users
    needs: [start-ec2-runner, deploy-drs]
    if: always() && !failure() && !cancelled() && inputs.full-dms-deploy == true
    runs-on: ${{ needs.start-ec2-runner.outputs.runner-label }}
    steps:
      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_MGMT }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: Terraform-GHA

      - name: ü§´ Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: RDS_CREDENTIALS, des-${{ inputs.tf-environment }}-rds-credentials
          parse-json-secrets: true

      - name: ‚ú® Create DMS User
        uses: dvsa/des-workflow-actions/.github/actions/db-functions/run-db-script@main
        with:
          db-script-repo: dvsa/mes-data-poller-service
          db-script-branch: ${{ inputs.db-script-branch }}
          db-script-path: destination-db/user-creation
          db-cname: ${{ env.RDS_CREDENTIALS_TARS_DB_CNAME }}
          db-username: ${{ env.RDS_CREDENTIALS_TARS_DB_USERNAME }}
          db-password: ${{ env.RDS_CREDENTIALS_TARS_DB_PASSWORD }}
          user-password: ${{ env.RDS_CREDENTIALS_TARS_DMS_USER_PASSWORD }}
          db-script-filename: 010_createDMSUser.sql

      - name: ‚ú® Create Ref Data User
        uses: dvsa/des-workflow-actions/.github/actions/db-functions/run-db-script@main
        with:
          db-script-repo: dvsa/mes-data-poller-service
          db-script-branch: ${{ inputs.db-script-branch }}
          db-script-path: destination-db/user-creation
          db-cname: ${{ env.RDS_CREDENTIALS_TARS_DB_CNAME }}
          db-username: ${{ env.RDS_CREDENTIALS_TARS_DB_USERNAME }}
          db-password: ${{ env.RDS_CREDENTIALS_TARS_DB_PASSWORD }}
          user-password: ${{ env.RDS_CREDENTIALS_TARS_REFDATA_USER_PASSWORD }}
          db-script-filename: 060_createRefdataUser.sql

  deploy-dms:
    name: üß© DMS
    needs: [start-ec2-runner, create-db-users]
    if: always() && !failure() && !cancelled() && inputs.dms == true
    strategy:
      max-parallel: 1
      matrix:
        tf-action: [plan, apply]
    uses: dvsa/des-workflow-actions/.github/workflows/terraform-action.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      branch: ${{ inputs.branch }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      tf-component: dms
      release-tag: ${{ inputs.release-tag }}
      tf-args: ${{ inputs.tf-args }}
      tf-action: ${{ matrix.tf-action }}
    secrets: inherit

  full-dms-deploy:
    name: üöÄ Full DMS Deploy
    needs: [start-ec2-runner, deploy-dms]
    if: always() && !failure() && !cancelled() && inputs.full-dms-deploy == true
    uses: dvsa/des-workflow-actions/.github/workflows/full-dms-deploy.yaml@main
    with:
      runner: ${{ needs.start-ec2-runner.outputs.runner-label }}
      aws-account: ${{ inputs.aws-account }}
      tf-environment: ${{ inputs.tf-environment }}
      db-script-branch: ${{ inputs.tars-replica-db-script-branch }}
    secrets: inherit

  stop-ec2-runner:
    name: ‚èπÔ∏è Stop EC2 Runner
    needs: [start-ec2-runner, full-dms-deploy]
    if: always()
    uses: dvsa/des-workflow-actions/.github/workflows/manage-gha-tf-runner.yaml@main
    with:
      action: stop
      aws-account: ${{ inputs.aws-account }}
      runner-label: ${{ needs.start-ec2-runner.outputs.runner-label }}
      ec2-instance-id: ${{ needs.start-ec2-runner.outputs.ec2-instance-id }}
    secrets: inherit
