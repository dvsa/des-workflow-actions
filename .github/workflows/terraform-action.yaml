name: üìë Terraform Plan/Apply

on:
  workflow_call:
    inputs:
      runner:
        description: The EC2 GHA runner that has been spun up for deployment
        type: string
        required: false
        default: ubuntu-latest
      branch:
        description: Terraform Branch
        type: string
        required: true
      aws-account:
        description: AWS Account
        type: string
        required: true
      tf-environment:
        description: Terraform Environment
        type: string
        required: true
      tf-component:
        description: Terraform Component
        type: string
        required: true
      release-tag:
        description: The release tag to run a Terraform plan against (optional)
        type: string
        required: false
      tf-args:
        description: Additional Terraform arguments (optional)
        type: string
        required: false
      tf-action:
        description: The Terraform action to perform (plan/apply)
        type: string
        required: true
        default: plan
      job-index:
        description: The index of the current job in caller workflow
        type: string
        required: false

permissions:
  id-token: write
  contents: write

jobs:
  tf-action:
    name: ${{ inputs.tf-action }}
    runs-on: ${{ inputs.runner }}
    steps:
      - name: üì® Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_MGMT }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: Terraform-GHA

      - name: ü§´ Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: des-globals/env
          parse-json-secrets: true

      - name: ‚úçÔ∏è Generate tfvars
        id: get-tfvars
        if: ${{ contains(fromJSON('["dev", "uat", "prep", "live"]'), inputs.tf-environment) && inputs.tf-component != 'dmsbase' }}
        uses: dvsa/des-workflow-actions/.github/actions/get-tfvars@main
        with:
          environment: ${{ inputs.tf-environment }}
          component: ${{ inputs.tf-component }}
          release-tag: ${{ inputs.release-tag }}

      - name: üîë Assume AWS ${{ inputs.aws-account }} Role
        if: inputs.aws-account != 'mgmt'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-account == 'prod' && secrets.AWS_ROLE_PROD || secrets.AWS_ROLE_NONPROD }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: Terraform-${{ inputs.aws-account }}-GHA

      - name: üîç Get Terraform Version
        shell: bash
        run: echo "TF_VERSION=$(cat components/${{ inputs.tf-component }}/.terraform-version)" >> $GITHUB_ENV

      - name: ‚öôÔ∏è Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: ${{ inputs.tf-action == 'plan' && 'üìù Terraform Plan' || 'üöÄ Terraform Apply' }}
        run: |
          bash -x bin/terraform.sh \
          --action ${{ inputs.tf-action }} \
          --project mes \
          --environment ${{ inputs.tf-environment }} \
          --component ${{ inputs.tf-component }} \
          --group ${{ inputs.aws-account }} \
          --bucket-prefix dvsa.mes.tf \
          --region ${{ secrets.DVSA_AWS_REGION }} \
          -- ${{ steps.get-tfvars.outputs.tfvars }} \
          ${{ inputs.tf-args }} \
          ${{ inputs.tf-action == 'plan' && '-out=tfplan' || '' }}

      - name: üßê Terraform Show
        if: ${{ inputs.tf-action == 'plan' }}
        run: |
          terraform init components/${{ inputs.tf-component }}
          terraform show -no-color components/${{ inputs.tf-component }}/tfplan > ${{ github.workspace }}/tfplan.txt

      - name: ‚òÅÔ∏è Upload Plan
        if: ${{ inputs.tf-action == 'plan' }}
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.job-index }}_${{ inputs.tf-environment }}-${{ inputs.tf-component }}-plan"
          path: tfplan.txt
          retention-days: 3
