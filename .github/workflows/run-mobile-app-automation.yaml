name: 📱 Run Mobile App Automation

on:
  workflow_call:
    inputs:
      branch:
        description: Branch name to build from
        type: string
        required: true
      test-type:
        description: Test Type
        type: string
        required: true
      test-to-run:
        description: Test Suite or Spec to Run
        type: string
        required: true

permissions:
  id-token: write
  contents: write
  pages: write

jobs:
  run-mobile-app-automation:
    name: 📱 Run Mobile App Automation
    runs-on: mito-2
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: 🏷️ Set Version
        id: set-version
        run: |
          short_commit="$(git rev-parse --short HEAD)"          
          echo "version=$(date +%s)-$short_commit" >> $GITHUB_OUTPUT

      - name: ⚙️ Set Up Node
        id: node-setup
        uses: dvsa/des-workflow-actions/.github/actions/setup-node@main
        with:
          access-token: ${{ secrets.DES_ACCESS_TOKEN }}

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.DVSA_AWS_REGION }}

      - name: 🤫 Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: des-globals/env
          parse-json-secrets: true

      - name: 📋 Prepare App File
        run: |
          aws s3 cp s3://${{ env.DES_GLOBALS_ENV_DES4_ARTEFACT_S3 }}/mobile-app/develop/App.app.zip \
          ./build/App.app.zip
          
          aws s3 cp s3://${{ env.DES_GLOBALS_ENV_DES4_ARTEFACT_S3 }}/jenkins/credentials.json \
          ./creds/credentials.json
          
          mkdir -p apps/App.app
          unzip ./build/App.app.zip -d ./apps/App.app/

      - name: 🧪 Run Tests
        run: npm run wdio:des:ap -- --${{ inputs.test-type }} ${{ inputs.test-to-run }}

      - name: 📝 Generate Reports
        if: always()
        run: npm run s3report

      - name: ☁️ Upload to GitHub Summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: MobileAppAutomationReport-${{ steps.set-version.outputs.version }}
          path: reports/
          retention-days: 3

      - name: 🖥️ Close Simulators
        if: always()
        run: xcrun simctl shutdown all

  prepare-gh-pages-branch:
    name: 📋 Prepare gh-pages Branch
    if: always()
    needs: run-mobile-app-automation
    runs-on: ubuntu-latest
    steps:
      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: 🧹 Cleanup Old Reports
        run: |
          max_reports=10
          reports=($(ls -d [0-9]* 2>/dev/null | sort -V))
          reports_count=${#reports[@]}
          reports_to_delete=$((reports_count - max_reports))
          
          # Remove oldest reports
          if [ $reports_to_delete -gt 0 ]; then
            for (( i=0; i<$reports_to_delete; i++ )); do
              rm -rf "${reports[$i]}"
            done
          fi

      - name: 📦 Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "🧹 Cleanup: Remove old reports"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-pages:
    name: 🚀 Deploy Report
    if: always()
    needs: prepare-gh-pages-branch
    runs-on: ubuntu-latest
    steps:
      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: ☁️ Download Report
        uses: actions/download-artifact@v4
        with:
          name: MobileAppAutomationReport-${{ needs.run-mobile-app-automation.outputs.version }}

      - name: 📝 Generate Allure Report with History
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          gh_pages: gh-pages

      - name: 🚀 Deploy Report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
