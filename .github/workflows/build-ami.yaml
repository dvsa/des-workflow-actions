name: üìÄ Build AMI

on:
  workflow_call:
    inputs:
      puppet-branch:
        description: Puppet Branch
        type: string
        required: true
      packer-branch:
        description: Packer Branch
        type: string
        required: true
      node-type:
        description: Node Type
        type: string
        required: true
      volume-size:
        description: Volume Size
        type: string
        required: true
      packer-log:
        description: Packer Debugging (1 for verbose logging)
        type: string
        required: false
      skip-ami-creation:
        description: Skip AMI Creation
        type: boolean

permissions:
  id-token: write
  contents: write

env:
  PACKER_LOG: ${{ inputs.packer-log }}
  BUILD_ID: ${{ github.run_id }}
  ENVIRONMENT: dvsames
  NODETYPE: ${{ inputs.node-type }}
  VOLUME_SIZE: ${{ inputs.volume-size }}
  SKIP_AMI: ${{ inputs.skip-ami-creation }}

jobs:
  start-ec2-runner:
    name: ‚ñ∂Ô∏è Start EC2 Runner
    uses: dvsa/des-workflow-actions/.github/workflows/manage-gha-tf-runner.yaml@MES-9894-packer-workflow
    with:
      action: start
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      DVSA_AWS_REGION: ${{ secrets.DVSA_AWS_REGION }}
      GH_TOKEN_TEMP: ${{ secrets.GH_TOKEN_TEMP }}

  build-ami:
    name: üìÄ Build AMI
    needs: start-ec2-runner
    runs-on: ${{ needs.start-ec2-runner.outputs.runner-label }}
    defaults:
      run:
        working-directory: packer
    env:
      HOME: /home/ec2-user
    steps:
      - name: üì® Checkout Packer Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.packer-branch }}
          path: packer

      - name: üì® Checkout Puppet Repo
        uses: actions/checkout@v4
        with:
          repository: dvsa/des-puppet
          ref: ${{ inputs.puppet-branch }}
          path: puppet
          ssh-key: ${{ secrets.PUPPET_REPO_KEY }}

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.DVSA_AWS_REGION }}

      - name: ü§´ Get AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: des-globals/env
          parse-json-secrets: true

      - name: ‚öôÔ∏è Setup Packer
        uses: hashicorp/setup-packer@v3
        id: setup
        with:
          version: 1.8.6

      - name: Set SSH Key
        run: echo "${{ secrets.MES_DEPLOYER_KEY }}" > ${{ env.HOME }}/.ssh/mes-deployer

      - name: debugging
        run: |
          ls -al
          ls -al ../
          pwd
          cat ${{ env.HOME }}/.ssh/mes-deployer

      - name: Validate
        run: packer validate -var-file templates/global_variables.pkrvars.hcl templates/${{ inputs.node-type }}/template.pkr.hcl

      - name: Build AMI
        run: packer build -var-file templates/global_variables.pkrvars.hcl templates/${{ inputs.node-type }}/template.pkr.hcl

      - name: Remove SSH Key
        run: rm ~/.ssh/mes-deployer

#      - name: ‚òÅÔ∏è Upload to S3
#        id: s3-upload-artefacts
#        run: |
#          echo "## ‚òÅÔ∏è S3 Upload:" >> $GITHUB_STEP_SUMMARY
#          aws s3 cp ${{ env.ZIP_FILE }} \
#          s3://${{ env.DES_GLOBALS_ENV_ARTEFACT_S3 }}/mes/mobile-app-config/${{ env.ZIP_FILE }}
#          echo "‚úÖ Uploaded ${{ env.ZIP_FILE }} to S3" >> $GITHUB_STEP_SUMMARY
#
#      - name: ‚òÅÔ∏è Upload to GitHub Summary
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.ZIP_FILE }}
#          path: ${{ env.ZIP_FILE }}
#          retention-days: 3

  stop-ec2-runner:
    name: ‚èπÔ∏è Stop EC2 Runner
    needs: [start-ec2-runner, build-ami]
    if: always()
    uses: dvsa/des-workflow-actions/.github/workflows/manage-gha-tf-runner.yaml@MES-9894-packer-workflow
    with:
      action: stop
      runner-label: ${{ needs.start-ec2-runner.outputs.runner-label }}
      ec2-instance-id: ${{ needs.start-ec2-runner.outputs.ec2-instance-id }}
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      DVSA_AWS_REGION: ${{ secrets.DVSA_AWS_REGION }}
      GH_TOKEN_TEMP: ${{ secrets.GH_TOKEN_TEMP }}
