name: 🚀 Deploy

on:
  workflow_call:
    inputs:
      branch:
        description: The branch of the service to build the artefact/s from
        type: string
        default: main
      component:
        description: The associated Terraform component for the service
        type: string
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  build:
    name: Build
    uses: dvsa/appdev-github-actions/.github/workflows/ci-backend.yaml@main
    secrets: inherit

  push:
    name: Push
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: 🔍 Determine service name
        shell: bash
        run: echo "SERVICE_NAME=$(jq -r '.name | sub("^(mes|des)-"; "") | sub ("-service"; "")' package.json)" >> $GITHUB_ENV

      - name: 🪪 Get Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DES_MGMT_ROLE }}
          aws-region: ${{ vars.DVSA_AWS_REGION}}
          role-session-name: GHA

      - name: 🤫 Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: des-globals/env
          parse-json-secrets: true

      - name: 📥 Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-artifacts-${{ github.event.pull_request.number || github.run_id }}
          path: artifacts

      - name: ☁️ Upload to S3
        id: s3-upload-artefacts
        run: |
          short_sha=$(echo ${{ github.sha }} | cut -c1-7)
          
          echo "## Artifacts:" >> $GITHUB_STEP_SUMMARY
          for artifact in "artifacts"/*; do
            aws s3 cp "$artifact" \
            s3://${{ env.DES_GLOBALS_ENV_ARTEFACT_S3 }}/mes/gha/functions/"${artifact#artifacts/%.zip}-$short_sha.zip"

            echo "✅ Uploaded ${artifact#artifacts/} to S3" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "VERSION=$(jq .version package.json)" >> $GITHUB_ENV
          echo "GIT_REV=$short_sha" >> $GITHUB_ENV

      - name: ☁️️ Manifest
        if: ${{ !startsWith(inputs.branch, 'release-') }}
        id: create_manifest
        run: |
          file_name="${{ env.SERVICE_NAME }}_${{ env.VERSION }}-${{ env.GIT_REV }}.manifest"
          for func in $(yq eval '.functions | keys' -o=json serverless.yml | jq -r '.[]'); do
            echo "${func}_version = \"${{ env.VERSION }}-${{ env.GIT_REV }}.zip\"" >> $file_name
          done

          aws s3 cp $file_name s3://${{ env.DES_GLOBALS_ENV_ARTEFACT_S3 }}/mes/gha/manifests/dev/

          echo "## Manifests:" >> $GITHUB_STEP_SUMMARY
          echo "✅ Uploaded $file_name to S3" >> $GITHUB_STEP_SUMMARY
