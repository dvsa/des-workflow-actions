name: 📱 Build Mobile App WIP
on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: true
      branch:
        type: string
        required: true
      environment:
        type: string
        required: true
      app-env:
        type: string
        required: true
      build-ipa:
        type: string
        required: false
        default: false

    secrets:
      AWS_ROLE:
        required: true
      DVSA_AWS_REGION:
        required: true

permissions:
  contents: write
  id-token: write

jobs:
  build-mobile-app:
    name: 📱 Build Mobile App (${{ inputs.environment }})
    runs-on: ${{ inputs.runs_on }}
    env:
      RUN_ID: ${{ github.run_id }}
      ENVIRONMENT: ${{ inputs.environment }}
      AWS_REGION: ${{ secrets.DVSA_AWS_REGION }}

    steps:
      - name: ⚙️ Set Environment
        run: |
          echo "PATH=$HOME/.gem/bin:$HOME/.rbenv/shims:/opt/homebrew/bin/:$PATH" >> $GITHUB_ENV
          echo "GEM_HOME=$HOME/.gem" >> $GITHUB_ENV
          clean=$(echo "${{ inputs.branch }}" | sed 's/^feature\///')
          branch=$(python3 -c "print('$clean'.lower())")
          echo "BRANCH=$(echo $branch)" >> $GITHUB_OUTPUT
        id: branch

      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: ⚙️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CVS_AWS_ROLE }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: mobile-build-${{ github.repository_id }}

      - name: 🤫 Get Secrets
        run: |
          aws secretsmanager get-secret-value --secret-id npmrc --query SecretString | jq . --raw-output  > .npmrc
          aws secretsmanager get-secret-value --secret-id ionic-config --query SecretString | jq . --raw-output  > ionic.config.json

      - name: ➕ Install Dependencies
        run: |
          echo "NPM Version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          echo "Node Version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          npm ci
          npm run config:${{ inputs.app-env }}
          npm run schema-version

      - name: ⚒️ Build Project
        run: npm run build-ci

      - name: 📱 Build Mobile Simulator (${{ inputs.environment }})
        if: ${{ !startsWith(inputs.branch, 'release-') }}
        env:
          BRANCH: ${{ steps.branch.outputs.BRANCH }}
        run: |
          bundle config set path .gem
          bundle install --jobs $(sysctl -n hw.physicalcpu)
          bundle exec fastlane simulator

      - name: ⚙️ Bump Version
        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
        run: node .github/scripts/update-des-app-version.js ${{ github.ref_name }}

      - name: 🚀 Deploy Sentry
        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
        run: |
          aws secretsmanager get-secret-value --secret-id sentryclirc --query SecretString | jq . --raw-output  > .sentryclirc
          npm run sentry-deploy

      - name: 📱 Build Mobile App (${{ inputs.environment }})
        if: ${{ inputs.build-ipa == 'true' }}
        env:
          BRANCH: ${{ inputs.branch }}
        run: |
          bundle config set path .gem
          bundle install --jobs $(sysctl -n hw.physicalcpu)
          bundle exec fastlane release_build

