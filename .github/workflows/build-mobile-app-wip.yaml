name: 📱 Build Mobile App WIP
on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: true
      branch:
        type: string
        required: true
      environment:
        type: string
        required: true
      config-type:
        type: string
        required: true
      build-type:
        type: string
        required: false
        default: test
      build-simulator:
        type: string
        required: false
        default: false
      build-ipa:
        type: string
        required: false
        default: false

    secrets:
      AWS_ROLE:
        required: true
      DVSA_AWS_REGION:
        required: true

defaults:
  run:
    shell: zsh {0}

permissions:
  contents: write
  id-token: write

jobs:
  build-mobile-app:
    name: 📱 Build Mobile App (${{ inputs.environment }})
    runs-on: ${{ inputs.runs_on }}
    env:
      RUN_ID: ${{ github.run_id }}
      BRANCH: ${{ inputs.branch }}
      ENVIRONMENT: ${{ inputs.environment }}
      AWS_REGION: ${{ secrets.DVSA_AWS_REGION }}
      LC_ALL: 'en_US.UTF-8'
      LANG: 'en_US.UTF-8'

    steps:
      - name: ⚙️ Set Environment
        run: |
          echo "GEM_HOME=$HOME/.gem" >> $GITHUB_ENV
          echo "PATH=$GEM_HOME/bin:$HOME/.rbenv/shims:/opt/homebrew/bin/:$PATH" >> $GITHUB_ENV

      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          repository: dvsa/des-mobile-app
          ref: ${{ inputs.branch }}

      - name: ⚙️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: mobile-build-${{ github.repository_id }}

      - name: ⚙️ Set Configuration Files
        run: |
          aws secretsmanager get-secret-value --secret-id npmrc --query SecretString | jq . --raw-output  > .npmrc
          aws secretsmanager get-secret-value --secret-id ionic-config --query SecretString | jq . --raw-output  > ionic.config.json

      - name: 🤫 Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            fastlane-config
            des-globals/env
          parse-json-secrets: true

      - name: ➕ Install Dependencies
        run: |
          echo "NPM Version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          echo "Node Version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          
          npm ci
          npm run config:${{ inputs.config-type }}
          npm run schema-version
          bundle config set path .gem
          bundle install --jobs $(sysctl -n hw.physicalcpu)

      - name: ➕ Pod Install
        working-directory: ./ios/App/
        run: gem install cocoapods

      - name: ⚒️ Build Project
        run: npm run build:${{ inputs.build-type }}

      - name: 📱 Build Mobile Simulator (${{ inputs.environment }})
        if: ${{ inputs.build-simulator == 'true' }}
        run: bundle exec fastlane simulator

#      - name: ⚙️ Bump Version
#        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
#        run: node .github/scripts/update-des-app-version.js ${{ github.ref_name }}

      - name: 🚀 Deploy Sentry
        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
        run: |
          aws secretsmanager get-secret-value --secret-id sentryclirc --query SecretString | jq . --raw-output  > .sentryclirc
          bash buildScripts/sentry-deploy.sh

      - name: 📱 Build Mobile App (${{ inputs.environment }})
        if: ${{ inputs.build-ipa == 'true' }}
        run: bundle exec fastlane release_build
