name: 📱 Build Mobile App WIP
on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: true
      branch:
        type: string
        required: true
      environment:
        type: string
        required: true
      app-env:
        type: string
        required: true

    secrets:
      AWS_ROLE:
        required: true
      DVSA_AWS_REGION:
        required: true

permissions:
  contents: write
  id-token: write

jobs:
  build-mobile-app:
    name: 📱 Build Mobile App (${{ inputs.environment }})
    runs-on: ${{ inputs.runs_on }}
    env:
      RUN_ID: ${{ github.run_id }}
      NODE_OPTIONS: '--max_old_space_size=4096'
      LANG: 'en_US.UTF-8'
      PATH: '$HOME/.gem/bin:$HOME/.rbenv/shims:/opt/homebrew/bin/:/urs/bin:/usr/local/bin:$PATH'
      LC_ALL: 'en_US.UTF-8'
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: '180'
      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: '5'

    steps:
      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: ⚙️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: mobile-build-${{ github.repository_id }}

      - name: 🤫 Get Secrets
        run: |
          aws secretsmanager get-secret-value --secret-id npmrc --query SecretString | jq . --raw-output  > .npmrc
          aws secretsmanager get-secret-value --secret-id ionic-config --query SecretString | jq . --raw-output  > ionic.config.json
          aws secretsmanager get-secret-value --secret-id fastlane-config --query SecretString | jq . --raw-output  > config.sh && bash config.sh

      - name: ➕ Install Dependencies
        run: |
          echo "NPM Version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          echo "Node Version: $(node -v)" >> $GITHUB_STEP_SUMMARY
          
          npm install git-rev-sync --save
          npm ci
          run config:${{ inputs.app-env }}
          run schema-version

      - name: ⚒️ Build Project
        run: npm run build:${{ inputs.app-env }}

      - name: 📁 Zip App File
        if: ${{ !startsWith(inputs.branch, 'release-') }}
        run: |
          cd e2e-app
          zip -r App.app.zip App.app

      - name: 🚀 Deploy Sentry
        if: ${{ inputs.environment == 'release' }}
        run: |
          aws secretsmanager get-secret-value --secret-id sentryclirc --query SecretString | jq . --raw-output  > .sentryclirc
          npm run sentry-deploy

      - name: 🔐 Unlock Keychain
        run: |
          security unlock-keychain -p "${{ env.PASSWORD }}" /Users/${{ env.USERNAME }}/Library/Keychains/${{ env.KEYCHAIN_NAME }}
          security set-keychain-settings -t 1900 -l /Users/${{ env.USERNAME }}/Library/Keychains/${{ env.KEYCHAIN_NAME }}

      - name: 📱 Build Mobile App (${{ inputs.environment }})
        if: ${{ startsWith(inputs.branch, 'release-') }}
        run: |
          fastlane ios build
          npm buildScripts/rename-artifact.js

      - name: 🔍 Determine File to Upload
        run: |
          file_type="${{ startsWith(inputs.branch, 'release-') && 'ipa' || 'zip' }}"
          build_output_dir="${{ startsWith(inputs.branch, 'release-') && 'build' || 'e2e-app' }}"
          file_name="$(find "$build_output_dir" -name "*.$file_type" -exec basename {} \;)"
          environment_path="${{ inputs.environment }}"
          
          if [ ${{ !contains(fromJSON('["develop", "release-"]'), inputs.branch) }} ]; then
            environment_path="feature"
          fi
          
          echo "BUILD_OUTPUT_DIR=$build_output_dir" >> $GITHUB_ENV
          echo "FILE_NAME=$file_name" >> $GITHUB_ENV
          echo "ENVIRONMENT_PATH=$environment_path" >> $GITHUB_ENV

      - name: ☁️ Upload to GitHub Summary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILE_NAME }}
          path: ${{ env.BUILD_OUTPUT_DIR }}/${{ env.FILE_NAME }}
          retention-days: 3

      - name: ☁️ Upload to S3
        run: |
          echo "## ☁️ S3 Upload:" >> $GITHUB_STEP_SUMMARY
          aws s3 cp ${{ env.BUILD_OUTPUT_DIR }}/${{ env.FILE_NAME }} \
          s3://${{ env.DES_GLOBALS_ENV_DES4_ARTEFACT_S3 }}/mobile-app/${{ env.ENVIRONMENT_PATH }}/${{ env.FILE_NAME }}
          echo "✅ Uploaded ${{ env.FILE_NAME }} to S3" >> $GITHUB_STEP_SUMMARY
