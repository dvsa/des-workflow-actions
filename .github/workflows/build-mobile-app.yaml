name: 📱 Build Mobile App
on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        required: true
      branch:
        type: string
        required: true
      environment:
        type: string
        required: true
      config-type:
        type: string
        required: true
      build-type:
        type: string
        required: false
        default: test
      build-simulator:
        type: string
        required: false
        default: false
      build-ipa:
        type: string
        required: false
        default: false

    secrets:
      AWS_ROLE:
        required: true

defaults:
  run:
    shell: zsh {0}

permissions:
  contents: write
  id-token: write

jobs:
  build-mobile-app:
    name: 📱 Build Mobile App (${{ inputs.environment }})
    runs-on: ${{ inputs.runs-on }}
    env:
      RUN_ID: ${{ github.run_id }}
      BRANCH: ${{ inputs.branch }}
      ENVIRONMENT: ${{ inputs.environment }}
      AWS_REGION: eu-west-1
      LC_ALL: 'en_US.UTF-8'
      LANG: 'en_US.UTF-8'

    steps:
      - name: ⚙️ Set Environment
        run: |
          echo "GEM_HOME=$HOME/.gem" >> $GITHUB_ENV
          echo "PATH=$GEM_HOME/bin:$HOME/.rbenv/shims:/opt/homebrew/bin/:$PATH" >> $GITHUB_ENV

      - name: 📨 Checkout
        uses: actions/checkout@v4
        with:
          repository: dvsa/des-mobile-app
          ref: ${{ inputs.branch }}

      - name: ⚙️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: mobile-build-${{ github.repository_id }}

      - name: 🤫 Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            des-mobile-app/env
            des-globals/env
          parse-json-secrets: true

      - name: ⚙️ Set Configuration Files
        env:
          IONIC_TOKEN: ${{ env.DES_MOBILE_APP_ENV_IONIC_TOKEN }}
          DVSA_PACKAGE_TOKEN: ${{ env.DES_MOBILE_APP_ENV_DVSA_PACKAGE_TOKEN }}
          IONIC_PRODUCT_KEY: ${{ env.DES_MOBILE_APP_ENV_IONIC_PRODUCT_KEY }}
          IONIC_APP_ID: ${{ env.DES_MOBILE_APP_ENV_IONIC_APP_ID }}
          IONIC_ORG_ID: ${{ env.DES_MOBILE_APP_ENV_IONIC_ORG_ID }}
        run: |
          aws secretsmanager get-secret-value --secret-id des-mobile-app-build-config --query SecretString | jq . --raw-output > build-config.sh && bash build-config.sh
          aws secretsmanager get-secret-value --secret-id fastlane-config --query SecretString | jq . --raw-output  > config.sh && bash config.sh

      - name: ➕ Install Dependencies
        run: |
          echo "NPM Version: $(npm -v)" >> $GITHUB_STEP_SUMMARY
          echo "Node Version: $(node -v)" >> $GITHUB_STEP_SUMMARY

          npm ci
          npm run config:${{ inputs.config-type }}
          npm run schema-version
          bundle config set path .gem
          bundle install --jobs $(sysctl -n hw.physicalcpu)

      - name: ⚒️ Build Project
        run: npm run build:${{ inputs.build-type }}

      - name: 📱 Build Mobile Simulator (${{ inputs.environment }})
        if: ${{ inputs.build-simulator == 'true' }}
        run: bundle exec fastlane simulator

      #      - name: ⚙️ Bump Version
      #        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
      #        run: node .github/scripts/update-des-app-version.js ${{ github.ref_name }}

      - name: 🚀 Deploy Sentry
        if: ${{ inputs.environment == 'release' && inputs.build-ipa == 'true' }}
        run: |
          aws secretsmanager get-secret-value --secret-id sentryclirc --query SecretString | jq . --raw-output  > .sentryclirc
          npm run sentry-deploy

      - name: 📱 Build Mobile App (${{ inputs.environment }})
        if: ${{ inputs.build-ipa == 'true' }}
        run: bundle exec fastlane release_build

      - name: 🔍 Get S3 Object URL
        id: get_s3_object_url
        run: |
          filename="des-${{ inputs.environment }}-${{ inputs.branch }}-${{ github.run_id }}.app.zip"
          
          if [[ ${{ inputs.environment }} == "release" ]]; then
            version=$(echo ${{ inputs.branch }} | cut -d '-' -f 2)
            path="release/${version}"
            short_commit=$(git rev-parse --short HEAD)
            filename="DrivingExaminerService-${version}-${{ github.run_id }}-${short_commit}.ipa"
          elif [[ ${{ inputs.environment }} == "feature" ]]; then
            path="feature/${{ inputs.branch }}/${{ github.run_id }}"
          else
            path=${{ inputs.environment }}/${{ github.run_id }}
          fi 
          
          object_url="https://${{ env.DES_MOBILE_ARTEFACTS_BUCKET }}.s3.${{ env.AWS_REGION }}.amazonaws.com/github-actions/${path}/${filename}"
          echo "object_url=$object_url" >> $GITHUB_OUTPUT
          echo "filename=$filename" >> $GITHUB_OUTPUT

      - name: 🔔 Send MS Teams Notification
        if: always()
        uses: skitionek/notify-microsoft-teams@v1.0.4
        with:
          webhook_url: ${{ env.DES_GLOBALS_ENV_MSTEAMS_WEBHOOK_MOBILE_APP }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          overwrite: |
            {
              "title": "📱 Build Mobile Artefact - Branch: ${{ inputs.branch }} | Environment: ${{ inputs.environment }} | BY: ${{ github.actor }}",
              "sections": [
                {
                  "activitySubtitle": "Artefact download: [${{ steps.get_s3_object_url.outputs.filename }}](${{ steps.get_s3_object_url.outputs.object_url }})"
                }
              ]
            }