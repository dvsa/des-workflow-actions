name: 🛢️ Manage NonProd RDS Clusters
run-name: "${{ github.event_name == 'schedule' && '⏰ Scheduled' || '🛢️Manual' }} ${{ inputs.action || github.event.schedule == '45 05 * * 1-5' && 'start' || 'stop' }} of ${{ inputs.environment || 'all' }} NonProd RDS Clusters"

on:
  workflow_dispatch:
    inputs:
      action:
        description: RDS Instance Action
        type: choice
        options:
          - start
          - stop
      environment:
        description: RDS Instance Environment
        type: choice
        options:
          - uat
          - perf
          - prep
  schedule:
    - cron: '45 05 * * 1-5'
    - cron: '45 18 * * 1-5'

permissions:
  id-token: write
  contents: write

jobs:
  manage-nonprod-clusters:
    runs-on: ubuntu-latest
    steps:
      - name: 📨 Checkout
        uses: actions/checkout@v4

      - name: 🕵️ Determine Action
        if: ${{ github.event_name == 'schedule' }}
        id: determine-action
        run: |
          if [ $(date +"%H") -lt 12 ]; then
            echo "action=start" >> $GITHUB_OUTPUT
          else
            echo "action=stop" >> $GITHUB_OUTPUT
          fi;

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.DVSA_AWS_REGION }}

      - name: 🤫 Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            des-globals/env
            rds-exclusions-list
          parse-json-secrets: true

      - name: 🔄 Update Exclusions List
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "## Update RDS Exclusions" >> $GITHUB_STEP_SUMMARY

          if ! echo ${{ env.RDS_EXCLUSIONS_LIST_ENVIRONMENTS }} | grep -q ${{ inputs.environment }}; then
            if [ "${{ inputs.action }}" == "start" ]; then
              exclusions=$(echo ${{ env.RDS_EXCLUSIONS_LIST_ENVIRONMENTS }} | sed 's/${{ inputs.environment }}//; s/  */ /g')
            fi
            
            if [ "${{ inputs.action }}" == "stop" ]; then
              exclusions="${{ env.RDS_EXCLUSIONS_LIST_ENVIRONMENTS }} ${{ inputs.environment }}"
            fi
            
            outcome=$(aws secretsmanager put-secret-value --secret-id rds-exclusions-list \
            --secret-string "{\"ENVIRONMENTS\":\"$exclusions\"}" > /dev/null; echo $?)
  
            if [ $outcome -eq 0 ]; then
              echo "✅ Successfully updated the RDS exclusions list" >> $GITHUB_STEP_SUMMARY
            fi
          else 
            echo "✅ Environment is already in the RDS exclusions list" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🔑 Configure NonProd AWS Credentials
        if: ${{ inputs.environment != 'prep' }}
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_NONPROD_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.DVSA_AWS_REGION }}

      - name: 🔑 Configure Prod AWS Credentials
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.environment == 'prep' }}
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT_ID }}:role/github-actions
          aws-region: ${{ secrets.DVSA_AWS_REGION }}

      - name: 🛠️ Manage NonProd Clusters
        run: |
          clusters=($(aws rds describe-db-clusters --region eu-west-1 | jq -r '.DBClusters[] | "\(.DBClusterIdentifier),\(.Status)"'))
          action=${{ inputs.action || steps.determine-action.outputs.action }}
                    
          echo "## NonProd RDS Cluster Action Summary" >> $GITHUB_STEP_SUMMARY
          for cluster in "${clusters[@]}"; do
            cluster_name=$(echo $cluster | cut -d ',' -f 1)
            cluster_status=$(echo $cluster | cut -d ',' -f 2)
            environment_name=$(echo $cluster | cut -d '-' -f 2)
          
            if [ "$action" == "start" ]; then 
              emoji="🟢"
              action_message="$emoji Starting cluster: $cluster_name"
            else 
              emoji="🔴"
              action_message="$emoji Stopping cluster: $cluster_name"
            fi

            # Ignore clusters that don't match the input environment for workflow_dispatch runs
            if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "$environment_name" != "${{ inputs.environment }}" ]; then
              echo "Skipping $cluster_name"
              continue
            fi
          
            # Check if the environment is in the exclusion list (0 = excluded, 1 = not excluded)
            is_excluded=$(echo $environment_name | \
            grep -q "$(echo ${{ env.RDS_EXCLUSIONS_LIST_ENVIRONMENTS }} | sed 's/ /\\|/g')"; echo $?)
        
            if [ $is_excluded -eq 0 ] && [ "$action" == "start" ]; then
              echo "🚫 $cluster_name is in the exclusion list so won't be started" >> $GITHUB_STEP_SUMMARY
              continue
            fi
          
            # Handle if any clusters have been manually changed in the AWS console
            if [[ ( "$action" == "start" && "$cluster_status" == "available" ) || ( "$action" == "stop" && "$cluster_status" == "stopped" ) ]]; then
              echo "$emoji $cluster_name is already in the desired state" >> $GITHUB_STEP_SUMMARY
              continue
            fi

            command=$(aws rds ${action}-db-cluster --region ${{ secrets.DVSA_AWS_REGION }} \
            --db-cluster-identifier $cluster_name | jq -r '.DBCluster.DBClusterIdentifier')
            echo "$action_message" >> $GITHUB_STEP_SUMMARY
          done

      - name: 🔔 Send MS Teams Notification
        if: always()
        uses: skitionek/notify-microsoft-teams@v1.0.4
        with:
          webhook_url: ${{ env.DES_GLOBALS_ENV_MSTEAMS_WEBHOOK_RDS_MANAGEMENT }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          overwrite: "{title: `Action: ${{ inputs.action || steps.determine-action.outputs.action }} NonProd Clusters | BY: ${{ github.actor }}`}"
