name: üëÆ Run Prowler
run-name: "üëÆ Run Prowler in ${{ inputs.aws-region || 'all regions' }} for Accounts: ${{ inputs.mgmt && ' MGMT |' || '' }}${{ inputs.nonprod && ' NONPROD |' || '' }}${{ inputs.prod && ' PROD |' || '' }}"

on:
  workflow_dispatch:
    inputs:
      mgmt:
        description: MGMT Account
        type: boolean
        default: true
      nonprod:
        description: NONPROD Account
        type: boolean
        default: true
#      prod:
#        description: PROD Account
#        type: boolean
      aws-region:
        description: AWS Region
        type: string
#      group:
#        description: Group
#        type: choice
#        options:
#          - cislevel1
#          - cislevel2
#          - forensics-ready
      additional-args:
        description: Additional Args
        type: string

permissions:
  id-token: write
  contents: write

jobs:
  determine-matrix:
    outputs:
      matrix: ${{ steps.set-outputs.outputs.matrix }}
    name: üîç Determine Matrix
    runs-on: ubuntu-latest
    steps:
      - name: ‚öôÔ∏è Set Output
        id: set-outputs
        run: |
          accounts="mgmt nonprod prod"
          inputs='${{ toJson(github.event.inputs) }}'
          declare -a included_accounts=()
  
          for account in $accounts; do
            include="$(echo $inputs | jq -r --arg keyvar "$account" '.[$keyvar]')"
            
            if [ "$include" == "true" ]; then
              included_accounts+=("\"$account\"")
            fi
          done
  
          matrix_value=$(IFS=, ; echo "${included_accounts[*]}")
  
          matrix="{\"aws-account\":[${matrix_value}]}"
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT


  run-prowler:
    needs: determine-matrix
    strategy:
      matrix: ${{ fromJSON(needs.determine-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: üì® Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: ‚ûï Install Prowler
        run: pip install prowler

      - name: üîç Get AWS Account ID
        id: get_account_id
        run: |
          case "${{ matrix.aws-account }}" in
            mgmt) account_id="${{ secrets.AWS_ACCOUNT_ID }}" ;;
            nonprod) account_id="${{ secrets.AWS_NONPROD_ACCOUNT_ID }}" ;;
            prod) account_id="${{ secrets.AWS_PROD_ACCOUNT_ID }}" ;;
          esac
          
          echo "aws-account=${account_id}" >> $GITHUB_OUTPUT

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ steps.get_account_id.outputs.aws-account }}:role/github-actions
          aws-region: ${{ inputs.aws-region }}

#      - name: ü§´ Get AWS Secrets
#        uses: aws-actions/aws-secretsmanager-get-secrets@v2
#        with:
#          secret-ids: des-globals/env
#          parse-json-secrets: true

      - name: üëÆ Run Prowler
        run: |
          [ -n "${{ inputs.region }}" ] && region_arg="--region ${{ inputs.region }}" || region_arg=""
          prowler aws $region_arg ${{ inputs.additional-args }}

#      - name: ‚òÅÔ∏è Upload to S3
#        id: s3-upload-artefacts
#        run: |
#          echo "## ‚òÅÔ∏è S3 Upload:" >> $GITHUB_STEP_SUMMARY
#          aws s3 cp ${{ env.ZIP_FILE }} \
#          s3://${{ env.DES_GLOBALS_ENV_ARTEFACT_S3 }}/mes/mobile-app-config/${{ env.ZIP_FILE }}
#          echo "‚úÖ Uploaded ${{ env.ZIP_FILE }} to S3" >> $GITHUB_STEP_SUMMARY

#      - name: ‚òÅÔ∏è Upload to GitHub Summary
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.ZIP_FILE }}
#          path: ${{ env.ZIP_FILE }}
#          retention-days: 3
